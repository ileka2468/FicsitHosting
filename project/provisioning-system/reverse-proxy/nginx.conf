# /etc/nginx/nginx.conf  (or split into conf.d/*.conf)

events {}

http {
    ##
    # Global hardening
    ##
    server_tokens off;                 # Hide “Server: nginx/1.x.x”

    ###
    # 2.  Catch‑all HTTPS – drop immediately
    ###
    server {
        listen 443 ssl default_server;
        server_name _ "";

        # dummy self‑signed cert so TLS hand‑shake can complete
        ssl_certificate     /etc/nginx/certs/dummy.crt;
        ssl_certificate_key /etc/nginx/certs/dummy.key;

        access_log /var/log/nginx/bad_https.log combined;
        return 444;
    }

    ###
    # 3.  Your *real* HTTPS virtual‑host
    #     (add real hostnames instead of the underscore if you have them)
    ###
    server {
        listen 443 ssl;
        server_name 69.164.196.13; # Replace with domain later

        ssl_certificate     /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        ##
        # Allowed upstreams
        ##
        location /auth/ {
            proxy_pass         http://auth-service:8081/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        location /manager/ {
            proxy_pass         http://frp-instance-manager:7001/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # Optional orchestrator
        # location /orchestrator/ {
        #     proxy_pass       http://satisfactory-orchestrator:8080/;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        # }

        ##
        # Everything else → drop
        ##
        location / {
            return 444;               # “nope” to undefined paths
        }
    }
}
