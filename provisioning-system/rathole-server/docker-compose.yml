services:
  rathole-instance-manager:
    build:
      context: .
      dockerfile: Dockerfile.instance-manager
    container_name: rathole-instance-manager
    restart: unless-stopped
    ports:
      - "7001:7001"           # Instance Manager API (HTTP)
      - "443:443"             # Instance Manager API (HTTPS)
      - "20000-20100:20000-20100/tcp"  # Port range for individual Rathole server instances
      - "40000-40100:40000-40100/tcp"  # Port range for tunneled game traffic (completely different from real game ports)
      - "40000-40100:40000-40100/udp"  # Port range for tunneled game traffic (UDP)
    environment:
      # === REQUIRED: Update these values ===
      - PUBLIC_HOST_IP=192.168.20.100  #  Actual host/LAN IP
      - PUBLIC_IP=${PUBLIC_IP:-0.0.0.0}  # For server binding (optional, defaults to 0.0.0.0)
      - INTERNAL_SERVER_HOST=${INTERNAL_SERVER_HOST:-rathole-instance-manager}
      # === Security Configuration ===
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL:-http://auth-service:8081}
      - USE_HTTPS=${USE_HTTPS:-false}
      - SSL_CERT_PATH=/certs/server.crt
      - SSL_KEY_PATH=/certs/server.key
      
      # === Legacy Auth (DISABLED) ===
      - LEGACY_AUTH_ENABLED=false
      
      # === Instance Manager Configuration ===
      - SERVER_PORT=7001
      - HTTPS_PORT=443
      - RATHOLE_BINARY=/usr/local/bin/rathole
      - BASE_DATA_DIR=/data/rathole-instances
      
      # === Port Allocation Ranges ===
      - RATHOLE_PORT_START=20000
      - RATHOLE_PORT_END=20100
      - GAME_PORT_START=40000
      - GAME_PORT_END=40100
      
      # === Flask Settings ===
      - FLASK_ENV=production
    volumes:
      - rathole_instances_data:/data/rathole-instances
      - rathole_logs:/var/log/rathole
      - ./certs:/certs:ro        # SSL certificates (optional, create directory if using HTTPS)
    networks:
      - satis_network
      - auth-service_auth-network                # Network for auth service communication
      - orchestrator_satisfactory-network      # Network for orchestrator communication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  rathole_instances_data:
    driver: local
  rathole_logs:
    driver: local

networks:
  satis_network:
    external: true
  auth-service_auth-network:
    external: true
  orchestrator_satisfactory-network:
    external: true
